(* ::Package:: *)

(* ::Input:: *)
(*ClearAll[\[Zeta],\[Kappa]];*)
(*c[\[Lambda]_,\[Delta]_]:=\[Lambda]^(\[Zeta]+1)+\[Delta] (1-\[Lambda])^(\[Zeta]+1)*)
(*\[Lambda]c[\[Lambda]_,\[Delta]_]:=(1+ \[Delta] ((1-\[Lambda])/\[Lambda])^(\[Zeta]+1))^-1*)
(*\[Lambda]cinv[\[Lambda]c_,\[Delta]_]:=(1+ ((\[Lambda]c^-1-1)/\[Delta])^(1/(\[Zeta]+1)))^-1*)
(*\[Lambda]min[\[Delta]_]:=(1+\[Delta]^-(1/\[Zeta]))^-1*)
(*cmin[\[Delta]_]:=(1+\[Delta]^-(1/\[Zeta]))^-\[Zeta]*)
(*c1[\[Lambda]_,\[Delta]_]:=c[\[Lambda],\[Delta]]/cmin[\[Delta]]*)
(*c1full[\[Lambda]_,\[Delta]_]:=Piecewise[{{c1[\[Lambda],\[Delta]],\[Lambda]>\[Lambda]min[\[Delta]]}},1]*)
(*\[Lambda]cpol[\[Lambda]c0_,\[Delta]_,\[Tau]_]:=Piecewise[*)
(*{{\[Lambda]c[\[Lambda]min[\[Delta]],\[Delta]],c1full[\[Lambda]cinv[\[Lambda]c0,\[Delta]],\[Delta]]>\[Tau]}},*)
(*Max[\[Lambda]c0,\[Lambda]c[\[Lambda]min[\[Delta]],\[Delta]]]]*)
(*\[Lambda]pol[\[Lambda]c0_,\[Delta]_,\[Tau]_]:=Piecewise[*)
(*{{\[Lambda]min[\[Delta]],c1full[\[Lambda]cinv[\[Lambda]c0,\[Delta]],\[Delta]]>\[Tau]}},*)
(*Max[\[Lambda]cinv[\[Lambda]c0,\[Delta]],\[Lambda]min[\[Delta]]]]*)
(*\[Lambda]pol2[\[Lambda]0_,\[Delta]_,\[Tau]_]:=Piecewise[*)
(*{{\[Lambda]min[\[Delta]],c1full[\[Lambda]0,\[Delta]]>\[Tau]}},*)
(*Max[\[Lambda]0,\[Lambda]min[\[Delta]]]]*)
(*\[Delta]0[\[Tau]_]:=(\[Tau]^(1/\[Zeta])-1)^-\[Zeta]*)
(*\[Delta]max[\[Tau]_]:=(\[Tau]^(1/\[Zeta])-1)^-\[Zeta]*)


(* ::Input:: *)
(*cminD[\[Delta]_]:=cmin[\[Delta] \[Kappa]]*)
(*cminF[\[Delta]_]:=\[Kappa] cmin[\[Delta]/\[Kappa]]*)
(*\[Chi]minD[\[Delta]_]:=\[Lambda]min[\[Delta] \[Kappa]]*)
(*\[Chi]minF[\[Delta]_]:=\[Lambda]min[\[Delta]/\[Kappa]]*)
(*c1U[\[Delta]_,\[Tau]F_]:=\[Tau]F cminF[\[Delta]]/cminD[\[Delta]]*)
(*c1D[\[Chi]_,\[Delta]_]:=c1full[\[Chi],\[Delta] \[Kappa]]*)
(*myOrdering[x_]:=Position[x,Min[x]]//Flatten*)
(*choice[\[Chi]_,\[Delta]_,\[Tau]D_,\[Tau]F_]:=myOrdering[{c1U[\[Delta],\[Tau]F],\[Tau]D * 1,c1D[\[Chi],\[Delta]]}]*)
(*\[Chi]choice[\[Chi]_,\[Delta]_,\[Tau]D_,\[Tau]F_]:={\[Chi]minF[\[Delta]],\[Chi]minD[\[Delta] ],Max[\[Chi],\[Chi]minD[\[Delta] ]]}[[choice[\[Chi],\[Delta],\[Tau]D,\[Tau]F]]]//First*)


(* ::Input:: *)
(*\[Delta]star2[\[Lambda]0_,\[Tau]_]:=\[Delta]/.FindInstance[c1full[\[Lambda]0,\[Delta]]== \[Tau]  && \[Delta]>0 ,{\[Delta]},Reals,WorkingPrecision->10]//First*)
(*\[Lambda]star2[\[Delta]0_,\[Tau]_]:=\[Lambda]/.FindInstance[c1full[\[Lambda],\[Delta]0]== \[Tau]  && \[Lambda]>0 ,{\[Lambda]},Reals,WorkingPrecision->10]//First*)


(* ::Input:: *)
(*\[Delta]FDNC[\[Tau]D_,\[Tau]F_]:=\[Delta]/.FindRoot[c1U[\[Delta],\[Tau]F]==\[Tau]D ,{\[Delta],0.001}]*)
(*\[Delta]FDC[\[Chi]_,\[Tau]D_,\[Tau]F_]:=\[Delta]/.FindRoot[c1U[\[Delta],\[Tau]F]==c1D[\[Chi],\[Delta]] ,{\[Delta],0.001}]*)
(*\[Delta]DNCDC[\[Chi]_,\[Tau]D_,\[Tau]F_]:=\[Delta]/.FindRoot[c1D[\[Chi],\[Delta]]==\[Tau]D ,{\[Delta],0.001}]*)


(* ::Input:: *)
(*\[Chi]DNC[\[Delta]0_,\[Tau]F0_]:=\[Chi]/.FindRoot[c1D[\[Chi],\[Delta]0]==c1U[\[Delta]0,\[Tau]F0] ,{\[Chi],0.99}]*)
(*\[Chi]DND[\[Delta]0_,\[Tau]D0_]:=\[Chi]/.FindRoot[ c1D[\[Chi],\[Delta]0]==\[Tau]D0 ,{\[Chi],0.99}]*)
